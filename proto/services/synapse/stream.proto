syntax = "proto3";

package yotta.services.synapse;

option go_package = "github.com/yottalabsai/endorphin/pkg/services/synapse";

message YottaLabsStream {
  string client_id = 1;         // 客户端标识，当Register成功后，server返回给client
  string model_type = 2;         // 模型类型
  int64 timestamp = 3;          // 时间戳
  string message_id = 4;        // 请求ID， 用于幂等，谁发起消息，谁负责生成 message_id；
  oneof payload {// 不同类型payload，可以扩展各种不同消息类型， 本身就是可选，可能是nil
    PingMessage ping = 5;
    PongResult  pong = 6;
    ErrorResult error_result = 7;
    RunModelMessage run_model_message = 8;
    RunModelResult run_model_result = 9;
    InferenceMessage inference_message = 10;
    InferenceResult inference_result = 11;
    TextToImageMessage text_to_image_message = 12;
    TextToImageResult text_to_image_result = 13;
  }
}

// 心跳消息
message PingMessage {
  int64 sequence = 1;
}

message PongResult {
  int64 sequence = 1;
}

// 错误信息
message ErrorResult {
  string code = 1;
  string message = 2;
}

// 启动模型
message RunModelMessage {
  string model = 1;
}

// 加载模型成功消息（没啥意义，可以不用做这个消息）
message RunModelResult {
  string model = 1;
}

message InferenceMessage {
  double temperature = 1;
  double top_p = 2;
  int32 max_tokens = 3;
  double frequency_penalty = 4;
  double presence_penalty = 5;
  double repetition_penalty = 6;
  string model = 7;
  repeated Message messages = 8;
  bool stream = 9;
  StreamOptions stream_options = 10;
}
message Message {
  string role = 1;
  string content = 2;
}
message StreamOptions {
  bool include_usage = 1;
}

// Inference成功消息
message InferenceResult {
  string content = 1;
}

// text-to-image Request
message TextToImageMessage {
  string prompt = 1;
  int32 numInferenceSteps = 2;
  double guidanceScale = 3;
  double loraWeight = 4;
  int32 seed = 5;
  int32 height = 6;
  int32 width = 7;
  double pagScale = 8;
}

// text-to-image Result
message TextToImageResult {
  int32 code = 1;
  string message = 2;
  repeated ImageResult images = 3;
}

message ImageResult {
  string url = 1;
  double latency = 2;
  bool is_safe_prompt = 3;
}