// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: services/synapse/stream.proto

package synapse

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId  string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`    // 客户端标识，当Register成功后，server返回给client
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                 // 时间戳
	MessageId string `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 请求ID， 用于幂等，谁发起消息，谁负责生成 message_id；
	// Types that are assignable to Payload:
	//
	//	*StreamRequest_Ping
	//	*StreamRequest_RegisterMessage
	//	*StreamRequest_RunModelMessage
	//	*StreamRequest_InferenceMessage
	Payload isStreamRequest_Payload `protobuf_oneof:"payload"`
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_synapse_stream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_synapse_stream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_services_synapse_stream_proto_rawDescGZIP(), []int{0}
}

func (x *StreamRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *StreamRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (m *StreamRequest) GetPayload() isStreamRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *StreamRequest) GetPing() *PingMessage {
	if x, ok := x.GetPayload().(*StreamRequest_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *StreamRequest) GetRegisterMessage() *RegisterMessage {
	if x, ok := x.GetPayload().(*StreamRequest_RegisterMessage); ok {
		return x.RegisterMessage
	}
	return nil
}

func (x *StreamRequest) GetRunModelMessage() *RunModelMessage {
	if x, ok := x.GetPayload().(*StreamRequest_RunModelMessage); ok {
		return x.RunModelMessage
	}
	return nil
}

func (x *StreamRequest) GetInferenceMessage() *InferenceMessage {
	if x, ok := x.GetPayload().(*StreamRequest_InferenceMessage); ok {
		return x.InferenceMessage
	}
	return nil
}

type isStreamRequest_Payload interface {
	isStreamRequest_Payload()
}

type StreamRequest_Ping struct {
	Ping *PingMessage `protobuf:"bytes,4,opt,name=ping,proto3,oneof"`
}

type StreamRequest_RegisterMessage struct {
	RegisterMessage *RegisterMessage `protobuf:"bytes,5,opt,name=register_message,json=registerMessage,proto3,oneof"`
}

type StreamRequest_RunModelMessage struct {
	RunModelMessage *RunModelMessage `protobuf:"bytes,6,opt,name=run_model_message,json=runModelMessage,proto3,oneof"`
}

type StreamRequest_InferenceMessage struct {
	InferenceMessage *InferenceMessage `protobuf:"bytes,7,opt,name=inference_message,json=inferenceMessage,proto3,oneof"`
}

func (*StreamRequest_Ping) isStreamRequest_Payload() {}

func (*StreamRequest_RegisterMessage) isStreamRequest_Payload() {}

func (*StreamRequest_RunModelMessage) isStreamRequest_Payload() {}

func (*StreamRequest_InferenceMessage) isStreamRequest_Payload() {}

// 响应结果
type StreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are assignable to Data:
	//
	//	*StreamResponse_RegisterResult
	//	*StreamResponse_RunModelResult
	//	*StreamResponse_InferenceResult
	Data isStreamResponse_Data `protobuf_oneof:"data"`
}

func (x *StreamResponse) Reset() {
	*x = StreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_synapse_stream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse) ProtoMessage() {}

func (x *StreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_synapse_stream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse.ProtoReflect.Descriptor instead.
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return file_services_synapse_stream_proto_rawDescGZIP(), []int{1}
}

func (x *StreamResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StreamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *StreamResponse) GetData() isStreamResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *StreamResponse) GetRegisterResult() *RegisterResult {
	if x, ok := x.GetData().(*StreamResponse_RegisterResult); ok {
		return x.RegisterResult
	}
	return nil
}

func (x *StreamResponse) GetRunModelResult() *RunModelResult {
	if x, ok := x.GetData().(*StreamResponse_RunModelResult); ok {
		return x.RunModelResult
	}
	return nil
}

func (x *StreamResponse) GetInferenceResult() *InferenceResult {
	if x, ok := x.GetData().(*StreamResponse_InferenceResult); ok {
		return x.InferenceResult
	}
	return nil
}

type isStreamResponse_Data interface {
	isStreamResponse_Data()
}

type StreamResponse_RegisterResult struct {
	RegisterResult *RegisterResult `protobuf:"bytes,3,opt,name=register_result,json=registerResult,proto3,oneof"` // 注册成功，server返回clientId给client
}

type StreamResponse_RunModelResult struct {
	RunModelResult *RunModelResult `protobuf:"bytes,4,opt,name=run_model_result,json=runModelResult,proto3,oneof"` // 加载模型成功, client返回状态给server, 可以不做
}

type StreamResponse_InferenceResult struct {
	InferenceResult *InferenceResult `protobuf:"bytes,5,opt,name=inference_result,json=inferenceResult,proto3,oneof"` // 运行Inference成功，client返回结果给server
}

func (*StreamResponse_RegisterResult) isStreamResponse_Data() {}

func (*StreamResponse_RunModelResult) isStreamResponse_Data() {}

func (*StreamResponse_InferenceResult) isStreamResponse_Data() {}

type InferenceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 下面的先不用
	// double temperature = 1;
	// double top_p = 2;
	// int32 max_tokens = 3;
	// double frequency_penalty = 4;
	// double presence_penalty = 5;
	// double repetition_penalty = 6;
	// string model = 7;
	Messages []*InferenceMessageContent `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *InferenceMessage) Reset() {
	*x = InferenceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_synapse_stream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InferenceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferenceMessage) ProtoMessage() {}

func (x *InferenceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_services_synapse_stream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferenceMessage.ProtoReflect.Descriptor instead.
func (*InferenceMessage) Descriptor() ([]byte, []int) {
	return file_services_synapse_stream_proto_rawDescGZIP(), []int{2}
}

func (x *InferenceMessage) GetMessages() []*InferenceMessageContent {
	if x != nil {
		return x.Messages
	}
	return nil
}

type InferenceMessageContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *InferenceMessageContent) Reset() {
	*x = InferenceMessageContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_synapse_stream_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InferenceMessageContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferenceMessageContent) ProtoMessage() {}

func (x *InferenceMessageContent) ProtoReflect() protoreflect.Message {
	mi := &file_services_synapse_stream_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferenceMessageContent.ProtoReflect.Descriptor instead.
func (*InferenceMessageContent) Descriptor() ([]byte, []int) {
	return file_services_synapse_stream_proto_rawDescGZIP(), []int{3}
}

func (x *InferenceMessageContent) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *InferenceMessageContent) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 心跳消息
type PingMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence int64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *PingMessage) Reset() {
	*x = PingMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_synapse_stream_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMessage) ProtoMessage() {}

func (x *PingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_services_synapse_stream_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMessage.ProtoReflect.Descriptor instead.
func (*PingMessage) Descriptor() ([]byte, []int) {
	return file_services_synapse_stream_proto_rawDescGZIP(), []int{4}
}

func (x *PingMessage) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// 注册消息 @LKim实现
type RegisterMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 时间戳 先不用传参数
	Sign      string `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`            // client私钥签名 先不用传参数
}

func (x *RegisterMessage) Reset() {
	*x = RegisterMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_synapse_stream_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMessage) ProtoMessage() {}

func (x *RegisterMessage) ProtoReflect() protoreflect.Message {
	mi := &file_services_synapse_stream_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMessage.ProtoReflect.Descriptor instead.
func (*RegisterMessage) Descriptor() ([]byte, []int) {
	return file_services_synapse_stream_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RegisterMessage) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

// 启动模型
type RunModelMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *RunModelMessage) Reset() {
	*x = RunModelMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_synapse_stream_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunModelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunModelMessage) ProtoMessage() {}

func (x *RunModelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_services_synapse_stream_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunModelMessage.ProtoReflect.Descriptor instead.
func (*RunModelMessage) Descriptor() ([]byte, []int) {
	return file_services_synapse_stream_proto_rawDescGZIP(), []int{6}
}

func (x *RunModelMessage) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

// 注册成功消息
type RegisterResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *RegisterResult) Reset() {
	*x = RegisterResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_synapse_stream_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResult) ProtoMessage() {}

func (x *RegisterResult) ProtoReflect() protoreflect.Message {
	mi := &file_services_synapse_stream_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResult.ProtoReflect.Descriptor instead.
func (*RegisterResult) Descriptor() ([]byte, []int) {
	return file_services_synapse_stream_proto_rawDescGZIP(), []int{7}
}

func (x *RegisterResult) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// 加载模型成功消息（没啥意义，可以不用做这个消息）
type RunModelResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *RunModelResult) Reset() {
	*x = RunModelResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_synapse_stream_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunModelResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunModelResult) ProtoMessage() {}

func (x *RunModelResult) ProtoReflect() protoreflect.Message {
	mi := &file_services_synapse_stream_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunModelResult.ProtoReflect.Descriptor instead.
func (*RunModelResult) Descriptor() ([]byte, []int) {
	return file_services_synapse_stream_proto_rawDescGZIP(), []int{8}
}

func (x *RunModelResult) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

// Inference成功消息
type InferenceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *InferenceResult) Reset() {
	*x = InferenceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_synapse_stream_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InferenceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferenceResult) ProtoMessage() {}

func (x *InferenceResult) ProtoReflect() protoreflect.Message {
	mi := &file_services_synapse_stream_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferenceResult.ProtoReflect.Descriptor instead.
func (*InferenceResult) Descriptor() ([]byte, []int) {
	return file_services_synapse_stream_proto_rawDescGZIP(), []int{9}
}

func (x *InferenceResult) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_services_synapse_stream_proto protoreflect.FileDescriptor

var file_services_synapse_stream_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x79, 0x6e, 0x61, 0x70,
	0x73, 0x65, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x16, 0x79, 0x6f, 0x74, 0x74, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x73, 0x79, 0x6e, 0x61, 0x70, 0x73, 0x65, 0x22, 0xb5, 0x03, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x79, 0x6f, 0x74, 0x74, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x73, 0x79, 0x6e, 0x61, 0x70, 0x73, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x54,
	0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x79, 0x6f, 0x74, 0x74, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x79, 0x6e, 0x61, 0x70, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x55, 0x0a, 0x11, 0x72, 0x75, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x79, 0x6f, 0x74, 0x74, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x73, 0x79, 0x6e, 0x61, 0x70, 0x73, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x75, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x57, 0x0a, 0x11, 0x69,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x79, 0x6f, 0x74, 0x74, 0x61, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x79, 0x6e, 0x61, 0x70, 0x73, 0x65, 0x2e,
	0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x10, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0xc3, 0x02, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x51, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x6f, 0x74, 0x74,
	0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x79, 0x6e, 0x61, 0x70,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x52, 0x0a, 0x10, 0x72, 0x75, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x79, 0x6f, 0x74, 0x74, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73,
	0x79, 0x6e, 0x61, 0x70, 0x73, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x75, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x54, 0x0a, 0x10, 0x69, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x79, 0x6f, 0x74, 0x74, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x73, 0x79, 0x6e, 0x61, 0x70, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5f, 0x0a, 0x10, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x79, 0x6f,
	0x74, 0x74, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x79, 0x6e,
	0x61, 0x70, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x17, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x29, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x43, 0x0a, 0x0f, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22,
	0x27, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x2d, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22,
	0x2b, 0x0a, 0x0f, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x37, 0x5a, 0x35,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x6f, 0x74, 0x74, 0x61,
	0x6c, 0x61, 0x62, 0x73, 0x61, 0x69, 0x2f, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x70, 0x68, 0x69, 0x6e,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x79,
	0x6e, 0x61, 0x70, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_synapse_stream_proto_rawDescOnce sync.Once
	file_services_synapse_stream_proto_rawDescData = file_services_synapse_stream_proto_rawDesc
)

func file_services_synapse_stream_proto_rawDescGZIP() []byte {
	file_services_synapse_stream_proto_rawDescOnce.Do(func() {
		file_services_synapse_stream_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_synapse_stream_proto_rawDescData)
	})
	return file_services_synapse_stream_proto_rawDescData
}

var file_services_synapse_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_services_synapse_stream_proto_goTypes = []interface{}{
	(*StreamRequest)(nil),           // 0: yotta.services.synapse.StreamRequest
	(*StreamResponse)(nil),          // 1: yotta.services.synapse.StreamResponse
	(*InferenceMessage)(nil),        // 2: yotta.services.synapse.InferenceMessage
	(*InferenceMessageContent)(nil), // 3: yotta.services.synapse.InferenceMessageContent
	(*PingMessage)(nil),             // 4: yotta.services.synapse.PingMessage
	(*RegisterMessage)(nil),         // 5: yotta.services.synapse.RegisterMessage
	(*RunModelMessage)(nil),         // 6: yotta.services.synapse.RunModelMessage
	(*RegisterResult)(nil),          // 7: yotta.services.synapse.RegisterResult
	(*RunModelResult)(nil),          // 8: yotta.services.synapse.RunModelResult
	(*InferenceResult)(nil),         // 9: yotta.services.synapse.InferenceResult
}
var file_services_synapse_stream_proto_depIdxs = []int32{
	4, // 0: yotta.services.synapse.StreamRequest.ping:type_name -> yotta.services.synapse.PingMessage
	5, // 1: yotta.services.synapse.StreamRequest.register_message:type_name -> yotta.services.synapse.RegisterMessage
	6, // 2: yotta.services.synapse.StreamRequest.run_model_message:type_name -> yotta.services.synapse.RunModelMessage
	2, // 3: yotta.services.synapse.StreamRequest.inference_message:type_name -> yotta.services.synapse.InferenceMessage
	7, // 4: yotta.services.synapse.StreamResponse.register_result:type_name -> yotta.services.synapse.RegisterResult
	8, // 5: yotta.services.synapse.StreamResponse.run_model_result:type_name -> yotta.services.synapse.RunModelResult
	9, // 6: yotta.services.synapse.StreamResponse.inference_result:type_name -> yotta.services.synapse.InferenceResult
	3, // 7: yotta.services.synapse.InferenceMessage.messages:type_name -> yotta.services.synapse.InferenceMessageContent
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_services_synapse_stream_proto_init() }
func file_services_synapse_stream_proto_init() {
	if File_services_synapse_stream_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_synapse_stream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_synapse_stream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_synapse_stream_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InferenceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_synapse_stream_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InferenceMessageContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_synapse_stream_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_synapse_stream_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_synapse_stream_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunModelMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_synapse_stream_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_synapse_stream_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunModelResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_synapse_stream_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InferenceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_synapse_stream_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*StreamRequest_Ping)(nil),
		(*StreamRequest_RegisterMessage)(nil),
		(*StreamRequest_RunModelMessage)(nil),
		(*StreamRequest_InferenceMessage)(nil),
	}
	file_services_synapse_stream_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*StreamResponse_RegisterResult)(nil),
		(*StreamResponse_RunModelResult)(nil),
		(*StreamResponse_InferenceResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_synapse_stream_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_services_synapse_stream_proto_goTypes,
		DependencyIndexes: file_services_synapse_stream_proto_depIdxs,
		MessageInfos:      file_services_synapse_stream_proto_msgTypes,
	}.Build()
	File_services_synapse_stream_proto = out.File
	file_services_synapse_stream_proto_rawDesc = nil
	file_services_synapse_stream_proto_goTypes = nil
	file_services_synapse_stream_proto_depIdxs = nil
}
